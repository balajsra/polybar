; modules.ini

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/dwm]
type = internal/dwm
; format = <label-tags> <label-layout> <label-floating> <label-title>
format = <label-tags> <label-layout>
; Path to dwm socket (default: /tmp/dwm.sock)
; socket-path = /tmp/dwm.sock

; Left-click to view tag, right-click to toggle tag view
enable-tags-click = true
; Scroll to cycle between available tags
enable-tags-scroll = true
; If true and enable-tags-scroll = true, scrolling will view all tags regardless if occupied
tags-scroll-empty = true
; If true and enable-tags-scroll = true, scrolling will cycle through tags backwards
tags-scroll-reverse = true
; If true and enable-tags-scroll = true, wrap active tag when scrolling
tags-scroll-wrap = true
; Left-click to set secondary layout, right-click to switch to previous layout
enable-layout-click = true
; Scroll to cycle between available layouts
enable-layout-scroll = true
; Wrap when scrolling and reaching beginning/end of layouts
layout-scroll-wrap = true
; Reverse scroll direction
layout-scroll-reverse = true

; If enable-layout-click = true, clicking the layout symbol will switch to this layout
secondary-layout-symbol = [M]

; Separator in between shown tags
; label-separator = |

; Title of currently focused window
; Available tokens:
;   %title%
label-title = %title%
label-title-padding = ${bar/mybar.module-margin}
label-title-foreground = ${colors.foreground}
label-title-maxlen = ${sizes.maxlen}

; Symbol of current layout
; Available tokens:
;   %symbol%
label-layout = %symbol%
label-layout-foreground = ${colors.foreground}
label-layout-background = ${colors.background-alt}
label-layout-underline = ${colors.background-alt}
label-layout-padding = ${bar/mybar.module-margin}

; Text to show when currently focused window is floating
label-floating = (F)

; States: focused, unfocused, visible, urgent, empty
; Available tokens:
;   %name%

; focused = Selected tag on focused monitor
label-focused = %name%
label-focused-foreground = ${colors.dwm-focused-foreground}
label-focused-background = ${colors.dwm-focused-background}
label-focused-underline = ${colors.dwm-focused-background}
label-focused-padding = ${bar/mybar.module-margin}

; unfocused = Unselected tag on unselected monitor
label-unfocused = %name%
label-unfocused-foreground = ${colors.dwm-unfocused-foreground}
label-unfocused-background = ${colors.dwm-unfocused-background}
label-unfocused-underline = ${colors.dwm-unfocused-background}
label-unfocused-padding = ${bar/mybar.module-margin}

; visible = Unselected tag, but occupied tag on any monitor
label-visible = %name%
label-visible-foreground = ${colors.dwm-visible-foreground}
label-visible-background = ${colors.dwm-visible-background}
label-visible-underline = ${colors.dwm-visible-background}
label-visible-padding = ${bar/mybar.module-margin}

; urgent = Unselected tag with window that has urgency hint set
label-urgent = %name%
label-urgent-foreground = ${colors.dwm-urgent-foreground}
label-urgent-background = ${colors.dwm-urgent-background}
label-urgent-underline = ${colors.dwm-urgent-background}
label-urgent-padding = ${bar/mybar.module-margin}

; empty = Unselected and unoccupied tag
; This can be set to an empty string to hide empty tags
label-empty = %name%
label-empty-foreground = ${colors.dwm-empty-foreground}
label-empty-background = ${colors.dwm-empty-background}
label-empty-underline = ${colors.dwm-empty-background}
label-empty-padding = ${bar/mybar.module-margin}

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/backlight]
type = internal/backlight

; Use the following command to list available cards:
; $ ls -1 /sys/class/backlight/
card = intel_backlight

; Enable changing the backlight with the scroll wheel (unreleased)
; NOTE: This may require additional configuration on some systems. Polybar will
; write to `/sys/class/backlight/${self.card}/brightness` which requires polybar
; to have write access to that file.
; DO NOT RUN POLYBAR AS ROOT. 
; The recommended way is to add the user to the
; `video` group and give that group write-privileges for the `brightness` file.
; See the ArchWiki for more information:
; https://wiki.archlinux.org/index.php/Backlight#ACPI
; Default: false
enable-scroll = true

; Available tags:
;   <label> (default)
;   <ramp>
;   <bar>
format = <ramp> <label>

; Available tokens:
;   %percentage% (default)
label = %percentage%%
label-foreground = ${colors.backlight}

; Only applies if <ramp> is used
ramp-0 = üåï
ramp-1 = üåî
ramp-2 = üåì
ramp-3 = üåí
ramp-4 = üåë
ramp-foreground = ${colors.backlight}

; Only applies if <bar> is used
bar-width = 10
bar-indicator = |
bar-fill = ‚îÄ
bar-empty = ‚îÄ

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/battery]
type = internal/battery

; This is useful in case the battery never reports 100% charge
full-at = 100

; Use the following command to list batteries and adapters:
; $ ls -1 /sys/class/power_supply/
battery = BAT0
adapter = ADP1

; If an inotify event haven't been reported in this many
; seconds, manually poll for new values.
;
; Needed as a fallback for systems that don't report events
; on sysfs/procfs.
;
; Disable polling by setting the interval to 0.
;
; Default: 5
poll-interval = ${intervals.battery}

; see "man date" for details on how to format the time string
; NOTE: if you want to use syntax tags here you need to use %%{...}
; Default: %H:%M:%S
time-format = %H:%M

; Available tags:
;   <label-charging> (default)
;   <bar-capacity>
;   <ramp-capacity>
;   <animation-charging>
format-charging = "<animation-charging>   <label-charging>"

; Available tags:
;   <label-discharging> (default)
;   <bar-capacity>
;   <ramp-capacity>
;   <animation-discharging>
format-discharging = "<ramp-capacity>   <label-discharging>"

; Available tags:
;   <label-full> (default)
;   <bar-capacity>
;   <ramp-capacity>
format-full = "<ramp-capacity>   <label-full>"

; Available tokens:
;   %percentage% (default) - is set to 100 if full-at is reached
;   %percentage_raw%
;   %time%
;   %consumption% (shows current charge rate in watts)
label-charging = %percentage%% (%time%)
label-charging-foreground = ${colors.battery}

; Available tokens:
;   %percentage% (default) - is set to 100 if full-at is reached
;   %percentage_raw%
;   %time%
;   %consumption% (shows current discharge rate in watts)
label-discharging = %percentage%% (%time%)
label-discharging-foreground = ${colors.battery}

; Available tokens:
;   %percentage% (default) - is set to 100 if full-at is reached
;   %percentage_raw%
label-full = %percentage%
label-full-foreground = ${colors.battery}

; Only applies if <ramp-capacity> is used
ramp-capacity-0 = ÔâÑ
ramp-capacity-1 = ÔâÉ
ramp-capacity-2 = ÔâÇ
ramp-capacity-3 = ÔâÅ
ramp-capacity-4 = ÔâÄ
ramp-capacity-foreground = ${colors.battery}

; Only applies if <bar-capacity> is used
bar-capacity-width = 10

; Only applies if <animation-charging> is used
animation-charging-0 = ÔâÑ
animation-charging-1 = ÔâÉ
animation-charging-2 = ÔâÇ
animation-charging-3 = ÔâÅ
animation-charging-4 = ÔâÄ
animation-charging-foreground = ${colors.battery}
; Framerate in milliseconds
animation-charging-framerate = 750

; Only applies if <animation-discharging> is used
animation-discharging-0 = ÔâÄ
animation-discharging-1 = ÔâÅ
animation-discharging-2 = ÔâÇ
animation-discharging-3 = ÔâÉ
animation-discharging-4 = ÔâÑ
animation-discharging-foreground = ${colors.battery}
; Framerate in milliseconds
animation-discharging-framerate = 500

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/cpu]
type = internal/cpu

; Seconds to sleep between updates
; Default: 1
interval = ${intervals.cpu}

; Available tags:
;   <label> (default)
;   <bar-load>
;   <ramp-load>
;   <ramp-coreload>
format = %{A3:kitty -e htop &:} <label> %{A}

; Available tokens:
;   %percentage% (default) - total cpu load averaged over all cores
;   %percentage-sum% - Cumulative load on all cores
;   %percentage-cores% - load percentage for each core
;   %percentage-core[1-9]% - load percentage for specific core
label = Ôãõ %percentage%%
label-foreground = ${colors.cpu}

; Spacing between individual per-core ramps
ramp-coreload-spacing = 1
ramp-coreload-0 = ‚ñÅ
ramp-coreload-1 = ‚ñÇ
ramp-coreload-2 = ‚ñÉ
ramp-coreload-3 = ‚ñÑ
ramp-coreload-4 = ‚ñÖ
ramp-coreload-5 = ‚ñÜ
ramp-coreload-6 = ‚ñá
ramp-coreload-7 = ‚ñà
ramp-coreload-foreground = ${colors.cpu}

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/date]
type = internal/date

; Seconds to sleep between updates
; Default: 1.0
interval = ${intervals.date}

; See "https://en.cppreference.com/w/cpp/io/manip/put_time" for details on how to format the date string
; NOTE: if you want to use syntax tags here you need to use %%{...}
date = %a %x

; Optional time format
; time = %X

; if `date-alt` or `time-alt` is defined, clicking
; the module will toggle between formats
date-alt = %A, %B %d, %Y
; time-alt = %H:%M:%S

; Available tags:
;   <label> (default)
format = <label>

; Available tokens:
;   %date%
;   %time%
; Default: %date%
label = "ÔÅ≥ %date%"
; label-font = 3
label-foreground = ${colors.date}

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/time]
type = internal/date

; Seconds to sleep between updates
; Default: 1.0
interval = ${intervals.time}

; See "https://en.cppreference.com/w/cpp/io/manip/put_time" for details on how to format the date string
; NOTE: if you want to use syntax tags here you need to use %%{...}
; date = %a %x

; Optional time format
time = %X

; if `date-alt` or `time-alt` is defined, clicking
; the module will toggle between formats
; date-alt = %A, %B %d, %Y
time-alt = UTC%z (%Z)

; Available tags:
;   <label> (default)
format = <label>

; Available tokens:
;   %date%
;   %time%
; Default: %date%
label = "Ôôè %time%"
; label-font = 3
label-foreground = ${colors.time}

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/filesystem]
type = internal/fs

; Mountpoints to display
mount-0 = /home

; Seconds to sleep between updates
; Default: 30
interval = ${intervals.filesystem}

; Display fixed precision values
; Default: false
fixed-values = true

; Spacing between entries
; Default: 2
spacing = ${bar/mybar.module-margin}

; Available tags:
;   <label-mounted> (default)
;   <bar-free>
;   <bar-used>
;   <ramp-capacity>
format-mounted = %{A3:filelight &:} <label-mounted> %{A}

; Available tags:
;   <label-unmounted> (default)
format-unmounted = %{A3:gnome-disks &:} <label-unmounted> %{A}

; Available tokens:
;   %mountpoint%
;   %type%
;   %fsname%
;   %percentage_free%
;   %percentage_used%
;   %total%
;   %free%
;   %used%
; Default: %mountpoint% %percentage_free%%
label-mounted = Ôüâ %percentage_used%%
label-mounted-foreground = ${colors.filesystem}

; Available tokens:
;   %mountpoint%
; Default: %mountpoint% is not mounted
label-unmounted = %mountpoint% is not mounted
label-unmounted-foreground = ${colors.filesystem}

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/memory]
type = internal/memory

; Seconds to sleep between updates
; Default: 1
interval = ${intervals.memory}

; Available tags:
;   <label> (default)
;   <bar-used>
;   <bar-free>
;   <ramp-used>
;   <ramp-free>
;   <bar-swap-used>
;   <bar-swap-free>
;   <ramp-swap-used>
;   <ramp-swap-free>
format = %{A3:kitty -e htop &:} <label> %{A}

; Available tokens:
;   %percentage_used% (default)
;   %percentage_free%
;   %gb_used%
;   %gb_free%
;   %gb_total%
;   %mb_used%
;   %mb_free%
;   %mb_total%
;   %percentage_swap_used%
;   %percentage_swap_free%
;   %mb_swap_total%
;   %mb_swap_free%
;   %mb_swap_used%
;   %gb_swap_total%
;   %gb_swap_free%
;   %gb_swap_used%

label = Ô°ö %percentage_used%%
label-foreground = ${colors.memory}

; Only applies if <bar-used> is used
bar-used-indicator =
bar-used-width = 50
bar-used-foreground-0 = #55aa55
bar-used-foreground-1 = #557755
bar-used-foreground-2 = #f5a70a
bar-used-foreground-3 = #ff5555
bar-used-fill = ‚ñê
bar-used-empty = ‚ñê
bar-used-empty-foreground = #444444

; Only applies if <ramp-used> is used
ramp-used-0 = ‚ñÅ
ramp-used-1 = ‚ñÇ
ramp-used-2 = ‚ñÉ
ramp-used-3 = ‚ñÑ
ramp-used-4 = ‚ñÖ
ramp-used-5 = ‚ñÜ
ramp-used-6 = ‚ñá
ramp-used-7 = ‚ñà
ramp-used-foreground = ${colors.memory}

; Only applies if <ramp-free> is used
ramp-free-0 = ‚ñÅ
ramp-free-1 = ‚ñÇ
ramp-free-2 = ‚ñÉ
ramp-free-3 = ‚ñÑ
ramp-free-4 = ‚ñÖ
ramp-free-5 = ‚ñÜ
ramp-free-6 = ‚ñá
ramp-free-7 = ‚ñà
ramp-free-foreground = ${colors.memory}

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/pulseaudio]
type = internal/pulseaudio

; Sink to be used, if it exists (find using `pacmd list-sinks`, name field)
; If not, uses default sink
; sink = alsa_output.pci-0000_12_00.3.analog-stereo

; Use PA_VOLUME_UI_MAX (~153%) if true, or PA_VOLUME_NORM (100%) if false
; Default: true
use-ui-max = true

; Interval for volume increase/decrease (in percent points)
; Default: 5
interval = ${intervals.pulseaudio}

; Available tags:
;   <label-volume> (default)
;   <ramp-volume>
;   <bar-volume>
format-volume = <ramp-volume> <label-volume>

; Available tags:
;   <label-muted> (default)
;   <ramp-volume>
;   <bar-volume>
;format-muted = <label-muted>

; Available tokens:
;   %percentage% (default)
;   %decibels% (unreleased)
label-volume = %percentage%%
label-volume-foreground = ${colors.pulseaudio-volume}

; Available tokens:
;   %percentage% (default)
;   %decibels% (unreleased)
label-muted = Ô™Ä muted
label-muted-foreground = ${colors.pulseaudio-muted}

; Only applies if <ramp-volume> is used
ramp-volume-0 = ÔÄ¶
ramp-volume-1 = ÔÄß
ramp-volume-2 = ÔÄ®
ramp-volume-foreground = ${colors.pulseaudio-volume}

; Right and Middle click (unreleased)
click-right = pavucontrol &
; click-middle = 

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/updates]
type = custom/script

; Available tokens:
;   %counter%
; Command to be executed (using "/bin/sh -c [command]")
exec = ~/.config/polybar/scripts/updates-pacman-aurhelper.sh

; Conditional command that, if defined, needs to exit successfully
; before the main exec command is invoked.
; Default: ""
; exec-if = pgrep -x myservice

; Will the script output continous content?
; Default: false
tail = false

; Seconds to sleep between updates
; Default: 5 (0 if `tail = true`)
interval = ${intervals.updates}

; Available tags:
;   <output> - deprecated
;   <label> (default)
format = <label>
; format-background = ${colors.background}
; format-foreground = 
; format-padding = 4

; Available tokens:
;   %output%
; Default: %output%
label = Ôë™ %output%
label-foreground = ${colors.updates}

; Available tokens:
;   %counter%
;   %pid%
;
; "click-(left|middle|right)" will be executed using "/bin/sh -c [command]"
; click-left = echo left %counter%
; click-middle = echo middle %counter%
click-right = kitty -e paru -Syu &
; double-click-left = echo double left %counter%
; double-click-middle = echo double middle %counter%
; double-click-right = echo double right %counter%

; Available tokens:
;   %counter%
;   %pid%
;
; "scroll-(up|down)" will be executed using "/bin/sh -c [command]"
; scroll-up = echo scroll up %counter%
; scroll-down = echo scroll down %counter%

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/media-playing]
type = custom/script

; Available tokens:
;   %counter%
; Command to be executed (using "/bin/sh -c [command]")
exec = ~/.config/polybar/scripts/get-media-playing.sh

; Conditional command that, if defined, needs to exit successfully
; before the main exec command is invoked.
; Default: ""
; exec-if = pgrep -x myservice

; Will the script output continous content?
; Default: false
tail = false

; Seconds to sleep between updates
; Default: 5 (0 if `tail = true`)
interval = ${intervals.media-playing}

; Available tags:
;   <output> - deprecated
;   <label> (default)
format = <label>
; format-background = ${colors.background}
; format-foreground = 
; format-padding = 4

; Available tokens:
;   %output%
; Default: %output%
label = %output%
label-foreground = ${colors.media-playing}
label-maxlen = ${sizes.maxlen}

; Available tokens:
;   %counter%
;   %pid%
;
; "click-(left|middle|right)" will be executed using "/bin/sh -c [command]"
click-left = playerctl --player=playerctld play-pause &
; click-middle = echo middle %counter%
click-right = playerctld shift &
; double-click-left = echo double left %counter%
; double-click-middle = echo double middle %counter%
; double-click-right = echo double right %counter%

; Available tokens:
;   %counter%
;   %pid%
;
; "scroll-(up|down)" will be executed using "/bin/sh -c [command]"
scroll-up = "playerctl --player=playerctld next"
scroll-down = "playerctl --player=playerctld previous"

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/deadd-notification-status]
type = custom/script

; Available tokens:
;   %counter%
; Command to be executed (using "/bin/sh -c [command]")
exec = ~/.config/polybar/scripts/deadd-notification-status.sh

; Conditional command that, if defined, needs to exit successfully
; before the main exec command is invoked.
; Default: ""
; exec-if = pgrep -x myservice

; Will the script output continous content?
; Default: false
tail = false

; Seconds to sleep between updates
; Default: 5 (0 if `tail = true`)
interval = ${intervals.deadd-notification-status}

; Available tags:
;   <output> - deprecated
;   <label> (default)
format = <label>
; format-background = ${colors.background}
; format-foreground = 
; format-padding = 4

; Available tokens:
;   %output%
; Default: %output%
label = %output%
label-foreground = ${colors.deadd-notification-status}
; label-maxlen = 

; Available tokens:
;   %counter%
;   %pid%
;
; "click-(left|middle|right)" will be executed using "/bin/sh -c [command]"
click-left = ~/.config/deadd/deadd-notification-toggle.sh &
; click-middle = echo middle %counter%
click-right = ~/.config/deadd/open-notification-center.sh &
; double-click-left = echo double left %counter%
; double-click-middle = echo double middle %counter%
; double-click-right = echo double right %counter%

; Available tokens:
;   %counter%
;   %pid%
;
; "scroll-(up|down)" will be executed using "/bin/sh -c [command]"
; scroll-up = 
; scroll-down = 

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/powermenu]
type = custom/menu

expand-right = true

format-spacing = ${bar/mybar.module-margin}

label-open = "   ÔåÉ"
label-open-foreground = ${colors.powermenu}
label-close = " Ôôò close"
label-close-foreground = ${colors.powermenu-close}
label-separator = ${bar/mybar.separator}
label-separator-foreground = ${colors.foreground}

menu-0-0 = "Ôê¶ logout"
menu-0-0-exec = menu-open-1
menu-0-0-foreground = ${colors.powermenu-logout}
menu-0-1 = "ÔÄ£ lock"
menu-0-1-exec = menu-open-2
menu-0-1-foreground = ${colors.powermenu-lock}
menu-0-2 = "‚èæ sleep"
menu-0-2-exec = menu-open-3
menu-0-2-foreground = ${colors.powermenu-sleep}
menu-0-3 = "Ô∞á reboot"
menu-0-3-exec = menu-open-4
menu-0-3-foreground = ${colors.powermenu-reboot}
menu-0-4 = "ÔÄë power off"
menu-0-4-exec = menu-open-5
menu-0-4-foreground = ${colors.powermenu-power-off}

menu-1-0 = "Ôê¶ logout"
menu-1-0-exec = "dwmc quit"
menu-1-0-foreground = ${colors.powermenu-logout}
menu-1-1 = "Ô∞∏ cancel"
menu-1-1-exec = menu-open-0
menu-1-1-foreground = ${colors.powermenu-cancel}

menu-2-0 = "ÔÄ£ lock"
menu-2-0-exec = "loginctl lock-session"
menu-2-0-foreground = ${colors.powermenu-lock}
menu-2-1 = "Ô∞∏ cancel"
menu-2-1-exec = menu-open-0
menu-2-1-foreground = ${colors.powermenu-cancel}

menu-3-0 = "‚èæ sleep"
menu-3-0-exec = "systemctl suspend"
menu-3-0-foreground = ${colors.powermenu-sleep}
menu-3-1 = "Ô∞∏ cancel"
menu-3-1-exec = menu-open-0
menu-3-1-foreground = ${colors.powermenu-cancel}

menu-4-0 = "Ô∞á reboot"
menu-4-0-exec = reboot
menu-4-0-foreground = ${colors.powermenu-reboot}
menu-4-1 = "Ô∞∏ cancel"
menu-4-1-exec = menu-open-0
menu-4-1-foreground = ${colors.powermenu-cancel}

menu-5-0 = "ÔÄë power off"
menu-5-0-exec = poweroff
menu-5-0-foreground = ${colors.powermenu-power-off}
menu-5-1 = "Ô∞∏ cancel"
menu-5-1-exec = menu-open-0
menu-5-1-foreground = ${colors.powermenu-cancel}

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

[module/user-kernel]
type = custom/ipc

; Define the command to be executed when the hook is triggered
; Available tokens:
;   %pid% (id of the parent polybar process)
hook-0 = echo "Ôêï $(whoami)"
hook-1 = echo "ÔÖº $(uname -r)"

; Hook to execute on launch. The index is 1-based and using
; the example below (2) `whoami` would be executed on launch.
; If 0 is specified, no hook is run on launch
; Default: 0
initial = 1

; Available tags:
;   <output> (default)
format = <output>
format-foreground = ${colors.user-kernel}
format-background = ${colors.background}

; Mouse actions
; Available tokens:
;   %pid% (id of the parent polybar process)
click-left = polybar-msg -p %pid% hook user-kernel 1 &
; click-middle =
click-right = polybar-msg -p %pid% hook user-kernel 2 &
; scroll-up =
; scroll-down =
; double-click-left =
; double-click-right =

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
