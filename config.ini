;==========================================================
;
;
;   ██████╗  ██████╗ ██╗  ██╗   ██╗██████╗  █████╗ ██████╗
;   ██╔══██╗██╔═══██╗██║  ╚██╗ ██╔╝██╔══██╗██╔══██╗██╔══██╗
;   ██████╔╝██║   ██║██║   ╚████╔╝ ██████╔╝███████║██████╔╝
;   ██╔═══╝ ██║   ██║██║    ╚██╔╝  ██╔══██╗██╔══██║██╔══██╗
;   ██║     ╚██████╔╝███████╗██║   ██████╔╝██║  ██║██║  ██║
;   ╚═╝      ╚═════╝ ╚══════╝╚═╝   ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝
;
;
;   To learn more about how to configure Polybar
;   go to https://github.com/polybar/polybar
;
;   The README contains a lot of information
;
;==========================================================

[colors]
background = ${xrdb:background:#282A36}
background-alt = ${xrdb:color8:#4D4D4D}
foreground = ${xrdb:foreground:#F8F8F2}
foreground-alt = ${xrdb:color7:#BFBFBF}
primary = ${xrdb:color4:#BD93F9}
secondary = ${xrdb:color6:#8BE9FD}
alert = ${xrdb:color1:#FF5555}
powermenu = ${xrdb:color6:#8BE9FD}
powermenu-close = ${xrdb:color6:#8BE9FD}
powermenu-logout = ${xrdb:color5:#FF79C6}
powermenu-lock = ${xrdb:color4:#BD93F9}
powermenu-sleep = ${xrdb:color3:#F1FA8C}
powermenu-reboot = ${xrdb:color2:#50FA7B}
powermenu-power-off = ${xrdb:color1:#FF5555}
powermenu-cancel = ${xrdb:foreground:#F8F8F2}
backlight = ${xrdb:color3:#F1FA8C}
battery = ${xrdb:color2:#50FA7B}
cpu = ${xrdb:color3:#F1FA8C}
date = ${xrdb:color4:#BD93F9}
time = ${xrdb:color6:#8BE9FD}
filesystem = ${xrdb:color6:#8BE9FD}
memory = ${xrdb:color5:#FF79C6}
pulseaudio-volume = ${xrdb:color1:#FF5555}
pulseaudio-muted = ${xrdb:color7:#BFBFBF}
updates = ${xrdb:color2:#50FA7B}
media-playing = ${xrdb:color6:#8BE9FD}

[sizes]
bar-height = ${xrdb:polybar.bar-height:25}
module-margin = ${xrdb:polybar.module-margin:2}
tray-maxsize = ${xrdb:polybar.tray-maxsize:15}
tray-scale = ${xrdb:polybar.tray-scale:1}

[intervals]
battery = 10
cpu = 1
date = 1
time = 1
filesystem = 30
memory = 1
pulseaudio = 5
updates = 600

[bar/mybar]
; Use either of the following command to list available outputs:
; If unspecified, the application will pick the first one it finds.
; $ polybar -m | cut -d ':' -f 1
; $ xrandr -q | grep " connected" | cut -d ' ' -f1
; If no monitor is given, the primary monitor is used if it exists
monitor = ${env:MONITOR}

; Use the specified monitor as a fallback if the main one is not found.
; monitor-fallback =

; Require the monitor to be in connected state
; XRandR sometimes reports my monitor as being disconnected (when in use)
monitor-strict = false

; Use fuzzy matching for monitors (only ignores dashes -)
; Useful when monitors are named differently with different drivers.
monitor-exact = true

; Tell the Window Manager not to configure the window.
; Use this to detach the bar if your WM is locking its size/position.
; Note: With this most WMs will no longer reserve space for 
; the bar and it will overlap other windows. You need to configure
; your WM to add a gap where the bar will be placed.
override-redirect = false

; Put the bar at the bottom of the screen
bottom = false

; Prefer fixed center position for the `modules-center` block. 
; The center block will stay in the middle of the bar whenever
; possible. It can still be pushed around if other blocks need
; more space.
; When false, the center block is centered in the space between 
; the left and right block.
fixed-center = true

; Dimension defined as pixel value (e.g. 35) or percentage (e.g. 50%),
; the percentage can optionally be extended with a pixel offset like so:
; 50%:-10, this will result in a width or height of 50% minus 10 pixels
width = 100%
height = ${sizes.bar-height}

; Offset defined as pixel value (e.g. 35) or percentage (e.g. 50%)
; the percentage can optionally be extended with a pixel offset like so:
; 50%:-10, this will result in an offset in the x or y direction 
; of 50% minus 10 pixels
offset-x = 0
offset-y = 0

; Background ARGB color (e.g. #f00, #ff992a, #ddff1023)
background = ${colors.background}

; Foreground ARGB color (e.g. #f00, #ff992a, #ddff1023)
foreground = ${colors.foreground}

; Background gradient (vertical steps)
;   background-[0-9]+ = #aarrggbb
; background-0 = 

; Value used for drawing rounded corners
; Note: This shouldn't be used together with border-size because the border 
; doesn't get rounded. For this to work you may also need to enable 
; pseudo-transparency or use a compositor like compton.
; Individual top/bottom values can be defined using:
;   radius-{top,bottom}
radius = 0.0

; Under-/overline pixel size and argb color
; Individual values can be defined using:
;   {overline,underline}-size
;   {overline,underline}-color
line-size = 0
line-color = #f00

; Values applied to all borders
; Individual side values can be defined using:
;   border-{left,top,right,bottom}-size
;   border-{left,top,right,bottom}-color
; The top and bottom borders are added to the bar height, so the effective
; window height is:
;   height + border-top-size + border-bottom-size
; Meanwhile the effective window width is defined entirely by the width key and
; the border is placed within this area. So you effectively only have the
; following horizontal space on the bar:
;   width - border-right-size - border-left-size
; border-size can be defined as pixel value (e.g. 35) or percentage (e.g. 50%),
; the percentage can optionally be extended with a pixel offset like so:
; 50%:-10, this will result in 50% minus 10 pixels. The percentage is relative
; to the monitor width or height depending on the border direction. 
; border-size = 
; border-color = 

; Number of spaces to add at the beginning/end of the bar
; Individual side values can be defined using:
;   padding-{left,right}
padding-right = ${self.module-margin}

; Number of spaces to add before/after each module
; Individual side values can be defined using:
;   module-margin-{left,right}
module-margin = ${sizes.module-margin}

; Fonts are defined using <font-name>;<vertical-offset>
; Font names are specified using a fontconfig pattern.
;   font-0 = NotoSans-Regular:size=8;2
;   font-1 = MaterialIcons:size=10
;   font-2 = Termsynu:size=8;-1
;   font-3 = FontAwesome:size=10
; See the Fonts wiki page for more details
font-0 = "NotoSans Nerd Font:size=11;3"
font-1 = "FiraCode Nerd Font:size=11;3"
font-2 = "Droid Sans Mono:size=11;3"

; Modules are added to one of the available blocks
;   modules-left = cpu ram
;   modules-center = xwindow xbacklight
;   modules-right = ipc clock
modules-left = powermenu dwm
modules-center = media-playing
modules-right = updates cpu memory filesystem pulseaudio backlight battery date time

; The separator will be inserted between the output of each module
separator = |

; This value is used to add extra spacing between elements
; @deprecated: This parameter will be removed in an upcoming version
; spacing = 0

; Opacity value between 0.0 and 1.0 used on fade in/out
dim-value = 1.0

; Value to be used to set the WM_NAME atom
; If the value is empty or undefined, the atom value
; will be created from the following template: polybar-[BAR]_[MONITOR]
; NOTE: The placeholders are not available for custom values
; wm-name =

; Locale used to localize various module data (e.g. date)
; Expects a valid libc locale, for example: sv_SE.UTF-8
locale = en_US.utf8

; Position of the system tray window
; If empty or undefined, tray support will be disabled
; NOTE: A center aligned tray will cover center aligned modules
;
; Available positions:
;   left
;   center
;   right
;   none
tray-position = ${env:TRAY_POS}

; If true, the bar will not shift its
; contents when the tray changes
tray-detached = false

; Tray icon max size
tray-maxsize = ${sizes.tray-maxsize}

; DEPRECATED! Since 3.3.0 the tray always uses pseudo-transparency
; Enable pseudo transparency
; Will automatically be enabled if a fully transparent
; background color is defined using `tray-background`
; tray-transparent = false

; Background color for the tray container 
; ARGB color (e.g. #f00, #ff992a, #ddff1023)
; By default the tray container will use the bar
; background color.
tray-background = ${colors.background}

; Tray offset defined as pixel value (e.g. 35) or percentage (e.g. 50%)
tray-offset-x = 0
tray-offset-y = 0

; Pad the sides of each tray icon
tray-padding = ${self.module-margin}

; Scale factor for tray clients
tray-scale = ${sizes.tray-scale}

; Restack the bar window and put it above the
; selected window manager's root
;
; Fixes the issue where the bar is being drawn
; on top of fullscreen window's
;
; Currently supported WM's:
;   bspwm
;   i3 (requires: `override-redirect = true`)
; wm-restack =

; Set a DPI values used when rendering text
; This only affects scalable fonts
; Set this to 0 to let polybar calculate the dpi from the screen size.
; dpi = 
dpi-x = ${xrdb:dpi}
dpi-y = ${xrdb:dpi}

; Enable support for inter-process messaging
; See the Messaging wiki page for more details.
enable-ipc = true

; Fallback click handlers that will be called if
; there's no matching module handler found.
; click-left = 
; click-middle = 
; click-right =
; scroll-up =
; scroll-down =
; double-click-left =
; double-click-middle =
; double-click-right =

; Requires polybar to be built with xcursor support (xcb-util-cursor)
; Possible values are:
; - default   : The default pointer as before, can also be an empty string (default)
; - pointer   : Typically in the form of a hand
; - ns-resize : Up and down arrows, can be used to indicate scrolling
cursor-click = pointer
cursor-scroll = ns-resize

[global/wm]
; Adjust the _NET_WM_STRUT_PARTIAL top value
;   Used for top aligned bars
margin-bottom = 0

; Adjust the _NET_WM_STRUT_PARTIAL bottom value
;   Used for bottom aligned bars
margin-top = 0

[module/dwm]
type = internal/dwm
format = <label-tags> <label-layout> <label-floating> <label-title>
; Path to dwm socket (default: /tmp/dwm.sock)
; socket-path = /tmp/dwm.sock

; Left-click to view tag, right-click to toggle tag view
enable-tags-click = true
; Scroll to cycle between available tags
enable-tags-scroll = true
; If true and enable-tags-scroll = true, scrolling will view all tags regardless if occupied
tags-scroll-empty = true
; If true and enable-tags-scroll = true, scrolling will cycle through tags backwards
tags-scroll-reverse = true
; If true and enable-tags-scroll = true, wrap active tag when scrolling
tags-scroll-wrap = true
; Left-click to set secondary layout, right-click to switch to previous layout
enable-layout-click = false
; Scroll to cycle between available layouts
enable-layout-scroll = false
; Wrap when scrolling and reaching beginning/end of layouts
layout-scroll-wrap = false
; Reverse scroll direction
layout-scroll-reverse = false

; If enable-layout-click = true, clicking the layout symbol will switch to this layout
secondary-layout-symbol = [M]

; Separator in between shown tags
; label-separator = |

; Title of currently focused window
; Available tokens:
;   %title%
label-title = %title%
label-title-padding = ${bar/mybar.module-margin}
label-title-foreground = ${colors.foreground}
label-title-maxlen = 50

; Symbol of current layout
; Available tokens:
;   %symbol%
label-layout = %symbol%
label-layout-foreground = ${colors.foreground}
label-layout-background = ${colors.background-alt}
label-layout-underline = ${colors.background-alt}
label-layout-padding = ${bar/mybar.module-margin}

; Text to show when currently focused window is floating
label-floating = F

; States: focused, unfocused, visible, urgent, empty
; Available tokens:
;   %name%

; focused = Selected tag on focused monitor
label-focused = %name%
label-focused-foreground = ${colors.background}
label-focused-background = ${colors.primary}
label-focused-underline = ${colors.primary}
label-focused-padding = ${bar/mybar.module-margin}

; unfocused = Unselected tag on unselected monitor
label-unfocused = %name%
label-unfocused-foreground = ${colors.foreground}
label-unfocused-background = ${colors.background}
label-unfocused-underline = ${colors.background}
label-unfocused-padding = ${bar/mybar.module-margin}

; visible = Unselected tag, but occupied tag on any monitor
label-visible = %name%
label-visible-foreground = ${colors.background}
label-visible-background = ${colors.secondary}
label-visible-underline = ${colors.secondary}
label-visible-padding = ${bar/mybar.module-margin}

; urgent = Unselected tag with window that has urgency hint set
label-urgent = %name%
label-urgent-foreground = ${colors.foreground}
label-urgent-background = ${colors.alert}
label-urgent-underline = ${colors.alert}
label-urgent-padding = ${bar/mybar.module-margin}

; empty = Unselected and unoccupied tag
; This can be set to an empty string to hide empty tags
label-empty = %name%
label-empty-foreground = ${colors.foreground}
label-empty-background = ${colors.background}
label-empty-underline = ${colors.background}
label-empty-padding = ${bar/mybar.module-margin}

[module/backlight]
type = internal/backlight

; Use the following command to list available cards:
; $ ls -1 /sys/class/backlight/
card = intel_backlight

; Enable changing the backlight with the scroll wheel (unreleased)
; NOTE: This may require additional configuration on some systems. Polybar will
; write to `/sys/class/backlight/${self.card}/brightness` which requires polybar
; to have write access to that file.
; DO NOT RUN POLYBAR AS ROOT. 
; The recommended way is to add the user to the
; `video` group and give that group write-privileges for the `brightness` file.
; See the ArchWiki for more information:
; https://wiki.archlinux.org/index.php/Backlight#ACPI
; Default: false
enable-scroll = true

; Available tags:
;   <label> (default)
;   <ramp>
;   <bar>
format = <ramp> <label>

; Available tokens:
;   %percentage% (default)
label = %percentage%%
label-foreground = ${colors.backlight}

; Only applies if <ramp> is used
ramp-0 = 🌕
ramp-1 = 🌔
ramp-2 = 🌓
ramp-3 = 🌒
ramp-4 = 🌑
ramp-foreground = ${colors.backlight}

; Only applies if <bar> is used
bar-width = 10
bar-indicator = |
bar-fill = ─
bar-empty = ─

[module/battery]
type = internal/battery

; This is useful in case the battery never reports 100% charge
full-at = 100

; Use the following command to list batteries and adapters:
; $ ls -1 /sys/class/power_supply/
battery = BAT0
adapter = ADP1

; If an inotify event haven't been reported in this many
; seconds, manually poll for new values.
;
; Needed as a fallback for systems that don't report events
; on sysfs/procfs.
;
; Disable polling by setting the interval to 0.
;
; Default: 5
poll-interval = ${intervals.battery}

; see "man date" for details on how to format the time string
; NOTE: if you want to use syntax tags here you need to use %%{...}
; Default: %H:%M:%S
time-format = %H:%M

; Available tags:
;   <label-charging> (default)
;   <bar-capacity>
;   <ramp-capacity>
;   <animation-charging>
format-charging = "<animation-charging>   <label-charging>"

; Available tags:
;   <label-discharging> (default)
;   <bar-capacity>
;   <ramp-capacity>
;   <animation-discharging>
format-discharging = "<ramp-capacity>   <label-discharging>"

; Available tags:
;   <label-full> (default)
;   <bar-capacity>
;   <ramp-capacity>
format-full = "<ramp-capacity>   <label-full>"

; Available tokens:
;   %percentage% (default) - is set to 100 if full-at is reached
;   %percentage_raw%
;   %time%
;   %consumption% (shows current charge rate in watts)
label-charging = %percentage%% (%time%)
label-charging-foreground = ${colors.battery}

; Available tokens:
;   %percentage% (default) - is set to 100 if full-at is reached
;   %percentage_raw%
;   %time%
;   %consumption% (shows current discharge rate in watts)
label-discharging = %percentage%% (%time%)
label-discharging-foreground = ${colors.battery}

; Available tokens:
;   %percentage% (default) - is set to 100 if full-at is reached
;   %percentage_raw%
label-full = %percentage%
label-full-foreground = ${colors.battery}

; Only applies if <ramp-capacity> is used
ramp-capacity-0 = 
ramp-capacity-1 = 
ramp-capacity-2 = 
ramp-capacity-3 = 
ramp-capacity-4 = 
ramp-capacity-foreground = ${colors.battery}

; Only applies if <bar-capacity> is used
bar-capacity-width = 10

; Only applies if <animation-charging> is used
animation-charging-0 = 
animation-charging-1 = 
animation-charging-2 = 
animation-charging-3 = 
animation-charging-4 = 
animation-charging-foreground = ${colors.battery}
; Framerate in milliseconds
animation-charging-framerate = 750

; Only applies if <animation-discharging> is used
animation-discharging-0 = 
animation-discharging-1 = 
animation-discharging-2 = 
animation-discharging-3 = 
animation-discharging-4 = 
animation-discharging-foreground = ${colors.battery}
; Framerate in milliseconds
animation-discharging-framerate = 500

[module/cpu]
type = internal/cpu

; Seconds to sleep between updates
; Default: 1
interval = ${intervals.cpu}

; Available tags:
;   <label> (default)
;   <bar-load>
;   <ramp-load>
;   <ramp-coreload>
format = <label>

; Available tokens:
;   %percentage% (default) - total cpu load averaged over all cores
;   %percentage-sum% - Cumulative load on all cores
;   %percentage-cores% - load percentage for each core
;   %percentage-core[1-9]% - load percentage for specific core
label =  %percentage%%
label-foreground = ${colors.cpu}

; Spacing between individual per-core ramps
ramp-coreload-spacing = 1
ramp-coreload-0 = ▁
ramp-coreload-1 = ▂
ramp-coreload-2 = ▃
ramp-coreload-3 = ▄
ramp-coreload-4 = ▅
ramp-coreload-5 = ▆
ramp-coreload-6 = ▇
ramp-coreload-7 = █
ramp-coreload-foreground = ${colors.cpu}

[module/date]
type = internal/date

; Seconds to sleep between updates
; Default: 1.0
interval = ${intervals.date}

; See "https://en.cppreference.com/w/cpp/io/manip/put_time" for details on how to format the date string
; NOTE: if you want to use syntax tags here you need to use %%{...}
date = %a %x

; Optional time format
; time = %X

; if `date-alt` or `time-alt` is defined, clicking
; the module will toggle between formats
date-alt = %A, %B %d, %Y
; time-alt = %H:%M:%S

; Available tags:
;   <label> (default)
format = <label>

; Available tokens:
;   %date%
;   %time%
; Default: %date%
label = "  %date%"
label-font = 3
label-foreground = ${colors.date}

[module/time]
type = internal/date

; Seconds to sleep between updates
; Default: 1.0
interval = ${intervals.time}

; See "https://en.cppreference.com/w/cpp/io/manip/put_time" for details on how to format the date string
; NOTE: if you want to use syntax tags here you need to use %%{...}
; date = %a %x

; Optional time format
time = %X

; if `date-alt` or `time-alt` is defined, clicking
; the module will toggle between formats
; date-alt = %A, %B %d, %Y
; time-alt = %H:%M:%S

; Available tags:
;   <label> (default)
format = <label>

; Available tokens:
;   %date%
;   %time%
; Default: %date%
label = "  %time%"
label-font = 3
label-foreground = ${colors.time}

[module/filesystem]
type = internal/fs

; Mountpoints to display
mount-0 = /home

; Seconds to sleep between updates
; Default: 30
interval = ${intervals.filesystem}

; Display fixed precision values
; Default: false
fixed-values = true

; Spacing between entries
; Default: 2
spacing = ${bar/mybar.module-margin}

; Available tags:
;   <label-mounted> (default)
;   <bar-free>
;   <bar-used>
;   <ramp-capacity>
format-mounted = <label-mounted>

; Available tags:
;   <label-unmounted> (default)
format-unmounted = <label-unmounted>

; Available tokens:
;   %mountpoint%
;   %type%
;   %fsname%
;   %percentage_free%
;   %percentage_used%
;   %total%
;   %free%
;   %used%
; Default: %mountpoint% %percentage_free%%
label-mounted =  %percentage_used%%
label-mounted-foreground = ${colors.filesystem}

; Available tokens:
;   %mountpoint%
; Default: %mountpoint% is not mounted
label-unmounted = %mountpoint% is not mounted
label-unmounted-foreground = ${colors.filesystem}

[module/memory]
type = internal/memory

; Seconds to sleep between updates
; Default: 1
interval = ${intervals.memory}

; Available tags:
;   <label> (default)
;   <bar-used>
;   <bar-free>
;   <ramp-used>
;   <ramp-free>
;   <bar-swap-used>
;   <bar-swap-free>
;   <ramp-swap-used>
;   <ramp-swap-free>
format = <label>

; Available tokens:
;   %percentage_used% (default)
;   %percentage_free%
;   %gb_used%
;   %gb_free%
;   %gb_total%
;   %mb_used%
;   %mb_free%
;   %mb_total%
;   %percentage_swap_used%
;   %percentage_swap_free%
;   %mb_swap_total%
;   %mb_swap_free%
;   %mb_swap_used%
;   %gb_swap_total%
;   %gb_swap_free%
;   %gb_swap_used%

label =  %percentage_used%%
label-foreground = ${colors.memory}

; Only applies if <bar-used> is used
bar-used-indicator =
bar-used-width = 50
bar-used-foreground-0 = #55aa55
bar-used-foreground-1 = #557755
bar-used-foreground-2 = #f5a70a
bar-used-foreground-3 = #ff5555
bar-used-fill = ▐
bar-used-empty = ▐
bar-used-empty-foreground = #444444

; Only applies if <ramp-used> is used
ramp-used-0 = ▁
ramp-used-1 = ▂
ramp-used-2 = ▃
ramp-used-3 = ▄
ramp-used-4 = ▅
ramp-used-5 = ▆
ramp-used-6 = ▇
ramp-used-7 = █
ramp-used-foreground = ${colors.memory}

; Only applies if <ramp-free> is used
ramp-free-0 = ▁
ramp-free-1 = ▂
ramp-free-2 = ▃
ramp-free-3 = ▄
ramp-free-4 = ▅
ramp-free-5 = ▆
ramp-free-6 = ▇
ramp-free-7 = █
ramp-free-foreground = ${colors.memory}

[module/pulseaudio]
type = internal/pulseaudio

; Sink to be used, if it exists (find using `pacmd list-sinks`, name field)
; If not, uses default sink
; sink = alsa_output.pci-0000_12_00.3.analog-stereo

; Use PA_VOLUME_UI_MAX (~153%) if true, or PA_VOLUME_NORM (100%) if false
; Default: true
use-ui-max = true

; Interval for volume increase/decrease (in percent points)
; Default: 5
interval = ${intervals.pulseaudio}

; Available tags:
;   <label-volume> (default)
;   <ramp-volume>
;   <bar-volume>
format-volume = <ramp-volume> <label-volume>

; Available tags:
;   <label-muted> (default)
;   <ramp-volume>
;   <bar-volume>
;format-muted = <label-muted>

; Available tokens:
;   %percentage% (default)
;   %decibels% (unreleased)
label-volume = %percentage%%
label-volume-foreground = ${colors.pulseaudio-volume}

; Available tokens:
;   %percentage% (default)
;   %decibels% (unreleased)
label-muted = 婢 muted
label-muted-foreground = ${colors.pulseaudio-muted}

; Only applies if <ramp-volume> is used
ramp-volume-0 = 
ramp-volume-1 = 
ramp-volume-2 = 
ramp-volume-foreground = ${colors.pulseaudio-volume}

; Right and Middle click (unreleased)
click-right = pavucontrol &
; click-middle = 

[module/updates]
type = custom/script

; Available tokens:
;   %counter%
; Command to be executed (using "/bin/sh -c [command]")
exec = ~/.config/polybar/scripts/updates-pacman-aurhelper.sh

; Conditional command that, if defined, needs to exit successfully
; before the main exec command is invoked.
; Default: ""
; exec-if = pgrep -x myservice

; Will the script output continous content?
; Default: false
tail = false

; Seconds to sleep between updates
; Default: 5 (0 if `tail = true`)
interval = ${intervals.updates}

; Available tags:
;   <output> - deprecated
;   <label> (default)
format = <label>
; format-background = ${colors.background}
; format-foreground = 
; format-padding = 4

; Available tokens:
;   %output%
; Default: %output%
label =  %output%
label-foreground = ${colors.updates}

; Available tokens:
;   %counter%
;   %pid%
;
; "click-(left|middle|right)" will be executed using "/bin/sh -c [command]"
; click-left = echo left %counter%
; click-middle = echo middle %counter%
; click-right = echo right %counter%
; double-click-left = echo double left %counter%
; double-click-middle = echo double middle %counter%
; double-click-right = echo double right %counter%

; Available tokens:
;   %counter%
;   %pid%
;
; "scroll-(up|down)" will be executed using "/bin/sh -c [command]"
; scroll-up = echo scroll up %counter%
; scroll-down = echo scroll down %counter%

[module/media-playing]
type = custom/script

; Available tokens:
;   %counter%
; Command to be executed (using "/bin/sh -c [command]")
exec = ~/.config/polybar/scripts/get-media-playing.sh

; Conditional command that, if defined, needs to exit successfully
; before the main exec command is invoked.
; Default: ""
; exec-if = pgrep -x myservice

; Will the script output continous content?
; Default: false
tail = false

; Seconds to sleep between updates
; Default: 5 (0 if `tail = true`)
interval = 1

; Available tags:
;   <output> - deprecated
;   <label> (default)
format = <label>
; format-background = ${colors.background}
; format-foreground = 
; format-padding = 4

; Available tokens:
;   %output%
; Default: %output%
label =   %output%
label-foreground = ${colors.media-playing}

; Available tokens:
;   %counter%
;   %pid%
;
; "click-(left|middle|right)" will be executed using "/bin/sh -c [command]"
click-left = "playerctl --player=playerctld play-pause"
; click-middle = echo middle %counter%
click-right = "playerctld shift"
; double-click-left = echo double left %counter%
; double-click-middle = echo double middle %counter%
; double-click-right = echo double right %counter%

; Available tokens:
;   %counter%
;   %pid%
;
; "scroll-(up|down)" will be executed using "/bin/sh -c [command]"
scroll-up = "playerctl --player=playerctld next"
scroll-down = "playerctl --player=playerctld previous"

[module/powermenu]
type = custom/menu

expand-right = true

format-spacing = ${bar/mybar.module-margin}

label-open = "   "
label-open-foreground = ${colors.powermenu}
label-close = "  close"
label-close-foreground = ${colors.powermenu-close}
label-separator = |
label-separator-foreground = ${colors.foreground}

menu-0-0 = " logout"
menu-0-0-exec = menu-open-1
menu-0-0-foreground = ${colors.powermenu-logout}
menu-0-1 = " lock"
menu-0-1-exec = menu-open-2
menu-0-1-foreground = ${colors.powermenu-lock}
menu-0-2 = "⏾ sleep"
menu-0-2-exec = menu-open-3
menu-0-2-foreground = ${colors.powermenu-sleep}
menu-0-3 = "ﰇ reboot"
menu-0-3-exec = menu-open-4
menu-0-3-foreground = ${colors.powermenu-reboot}
menu-0-4 = " power off"
menu-0-4-exec = menu-open-5
menu-0-4-foreground = ${colors.powermenu-power-off}

menu-1-0 = " logout"
menu-1-0-exec = "pkill dwm"
menu-1-0-foreground = ${colors.powermenu-logout}
menu-1-1 = "ﰸ cancel"
menu-1-1-exec = menu-open-0
menu-1-1-foreground = ${colors.powermenu-cancel}

menu-2-0 = " lock"
menu-2-0-exec = "light-locker-command --lock"
menu-2-0-foreground = ${colors.powermenu-lock}
menu-2-1 = "ﰸ cancel"
menu-2-1-exec = menu-open-0
menu-2-1-foreground = ${colors.powermenu-cancel}

menu-3-0 = "⏾ sleep"
menu-3-0-exec = "systemctl suspend"
menu-3-0-foreground = ${colors.powermenu-sleep}
menu-3-1 = "ﰸ cancel"
menu-3-1-exec = menu-open-0
menu-3-1-foreground = ${colors.powermenu-cancel}

menu-4-0 = "ﰇ reboot"
menu-4-0-exec = reboot
menu-4-0-foreground = ${colors.powermenu-reboot}
menu-4-1 = "ﰸ cancel"
menu-4-1-exec = menu-open-0
menu-4-1-foreground = ${colors.powermenu-cancel}

menu-5-0 = " power off"
menu-5-0-exec = poweroff
menu-5-0-foreground = ${colors.powermenu-power-off}
menu-5-1 = "ﰸ cancel"
menu-5-1-exec = menu-open-0
menu-5-1-foreground = ${colors.powermenu-cancel}
